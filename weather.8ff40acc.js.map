{"mappings":"AA8CA,MAAMA,EAAaC,SAASC,cAAc,cACpCC,EAAaF,SAASC,cAAc,WACpCE,EAAOH,SAASC,cAAc,YAC9BG,EAAgBJ,SAASC,cAAc,sBAG7CC,EAAWG,iBAAiB,SAE5B,WAEED,EAAcE,mBAAmB,YADlB,wC,IAIjBP,EAAWM,iBAAiB,UAE5B,SAAoBE,GAClBA,EAAEC,iBACF,MAAMC,EAAO,IAAIC,SAASH,EAAEI,gBAmB9BC,eAA4BC,GAC1B,MAAMC,EAAQD,EAAIE,KAAIH,MAAMI,IAC1B,MAAMC,QAAaC,MAAM,uCAAuCF,KAEhE,IAAKC,EAAKE,GACR,MAAM,IAAIC,MAAMH,EAAKI,YAEvB,OAAOJ,EAAKK,MAAM,IAGdb,QAAac,QAAQC,WAAWV,GAKtC,OAJmBL,EAChBgB,QAAO,EAACC,OAAEA,KAAwB,cAAXA,IACvBX,KAAI,EAACY,MAAEA,KAAYA,EAAM,I,EA1B5BC,CALYnB,EACToB,OAAO,WACPJ,QAAOT,GAAQA,IACfD,KAAIC,GAAQA,EAAKc,UAGjBC,MAAKnB,MAAMK,IACV,MAAMe,EAAWf,EAAKF,KAAI,EAACkB,QAAEA,KAAcA,EAAQ,KAC7CC,QA4BZtB,eAA0BC,GACxB,MAAMsB,EAAW,+BACXC,EAAU,iCAEVtB,EAAQD,EAAIE,KAAIH,MAAMyB,IAC1B,MAAMC,EAAS,IAAIC,gBAAgB,CACjCC,IAAKJ,EACLK,EAAGJ,IAGCpB,QAAaC,MAAM,GAAGiB,kBAAyBG,KACrD,IAAKrB,EAAKE,GACR,MAAM,IAAIC,MAAMH,EAAKI,YAGvB,OAAOJ,EAAKK,MAAM,IAGdb,QAAac,QAAQC,WAAWV,GAKtC,OAJYL,EACTgB,QAAO,EAACC,OAAEA,KAAwB,cAAXA,IACvBX,KAAI,EAACY,MAAEA,KAAYA,G,CAjDWe,CAAWV,GACxC7B,EAAKwC,UAqDX,SAAsB9B,GACpB,OAAOA,EACJE,KACC,EACE6B,SAASC,OACPA,EACAC,WAAWC,KAAEA,EAAIC,KAAEA,IAErBC,UAAUC,QAAEA,EAAOC,KAAEA,MAErB,4BACMD,uBACAC,6BACMJ,WAAcC,qBACrBA,qBACAH,wBAGRO,KAAK,G,CAvEaC,CAAanB,EAAe,IAE9CoB,OAAMC,GAAKC,QAAQC,IAAIF,KACvBG,SAAQ,KACP3D,EAAW4D,QACXvD,EAAcuC,UA5BL,uCA4BuB,G","sources":["src/weather.js"],"sourcesContent":["// async function getCountry() {\n//   const URL = 'https://restcountries.com/v3.1/name/';\n//   const resp = await fetch(`${URL}Ukraine`);\n//   if (!resp.ok) {\n//     throw new Error(resp.statusText);\n//   }\n//   return resp.json();\n// }\n\n// getCountry()\n//   .then(data => console.log(data))\n//   .catch(e => console.log(e));\n\n// async function getCapital() {\n//   //   try {\n//   const URL = 'https://restcountries.com/v3.1/name/';\n//   const arr = ['Ukraine', 'Germany', 'France', 'hhhhh'];\n\n//   const resps = arr.map(async ctry => {\n//     const resp = await fetch(`${URL}${ctry}`);\n//     if (!resp.ok) {\n//       throw new Error(resp.statusText);\n//     }\n\n//     return resp.json();\n//   });\n\n//   const prom = await Promise.allSettled(resps);\n//   console.log(prom);\n//   return prom;\n//   //   } catch (e) {\n//   //     console.log(e);\n//   //   }\n// }\n\n// getCapital()\n//   .then(data => {\n//     const res = data\n//       .filter(({ status }) => status === 'fulfilled')\n//       .map(({ value }) => value[0]);\n//     const rej = data.filter(({ status }) => status === 'rejected');\n//     console.log(res);\n//     console.log(rej);\n//   })\n//   .catch(e => console.log(e));\n\nconst searchForm = document.querySelector('.js-search');\nconst addCountry = document.querySelector('.js-add');\nconst list = document.querySelector('.js-list');\nconst formContainer = document.querySelector('.js-form-container');\nconst markup = ' <input type=\"text\" name=\"country\" />';\n\naddCountry.addEventListener('click', handleAddInput);\n\nfunction handleAddInput() {\n  const markup = ' <input type=\"text\" name=\"country\" />';\n  formContainer.insertAdjacentHTML('beforeend', markup);\n}\n\nsearchForm.addEventListener('submit', handleForm);\n\nfunction handleForm(e) {\n  e.preventDefault();\n  const data = new FormData(e.currentTarget);\n  const arr = data\n    .getAll('country')\n    .filter(item => item)\n    .map(item => item.trim());\n\n  getCountries(arr)\n    .then(async resp => {\n      const capitals = resp.map(({ capital }) => capital[0]);\n      const weatherService = await getWeather(capitals);\n      list.innerHTML = createMarkup(weatherService);\n    })\n    .catch(e => console.log(e))\n    .finally(() => {\n      searchForm.reset();\n      formContainer.innerHTML = markup;\n    });\n}\n\nasync function getCountries(arr) {\n  const resps = arr.map(async item => {\n    const resp = await fetch(`https://restcountries.com/v3.1/name/${item}`);\n\n    if (!resp.ok) {\n      throw new Error(resp.statusText);\n    }\n    return resp.json();\n  });\n\n  const data = await Promise.allSettled(resps);\n  const countryObj = data\n    .filter(({ status }) => status === 'fulfilled')\n    .map(({ value }) => value[0]);\n\n  return countryObj;\n}\n\nasync function getWeather(arr) {\n  const BASE_URL = 'http://api.weatherapi.com/v1';\n  const API_KEY = 'a513b9e402f74148a7430930241802';\n\n  const resps = arr.map(async city => {\n    const params = new URLSearchParams({\n      key: API_KEY,\n      q: city,\n    });\n\n    const resp = await fetch(`${BASE_URL}/current.json?${params}`);\n    if (!resp.ok) {\n      throw new Error(resp.statusText);\n    }\n\n    return resp.json();\n  });\n\n  const data = await Promise.allSettled(resps);\n  const obj = data\n    .filter(({ status }) => status === 'fulfilled')\n    .map(({ value }) => value);\n\n  return obj;\n}\n\nfunction createMarkup(arr) {\n  return arr\n    .map(\n      ({\n        current: {\n          temp_c,\n          condition: { icon, text },\n        },\n        location: { country, name },\n      }) =>\n        `      <div>\n        <h2>${country}</h2>\n        <h3>${name}</h3>\n        <img src=\"${icon}\" alt=\"${text}\" />\n        <p>${text}</p>\n        <p>${temp_c}</p>\n      </div>`\n    )\n    .join('');\n}\n"],"names":["$7db59f3fe2689fbe$var$searchForm","document","querySelector","$7db59f3fe2689fbe$var$addCountry","$7db59f3fe2689fbe$var$list","$7db59f3fe2689fbe$var$formContainer","addEventListener","insertAdjacentHTML","e1","preventDefault","data","FormData","currentTarget","async","arr","resps","map","item","resp","fetch","ok","Error","statusText","json","Promise","allSettled","filter","status","value","$7db59f3fe2689fbe$var$getCountries","getAll","trim","then","capitals","capital","weatherService","BASE_URL","API_KEY","city","params","URLSearchParams","key","q","$7db59f3fe2689fbe$var$getWeather","innerHTML","current","temp_c","condition","icon","text","location","country","name","join","$7db59f3fe2689fbe$var$createMarkup","catch","e","console","log","finally","reset"],"version":3,"file":"weather.8ff40acc.js.map"}